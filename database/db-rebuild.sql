-- Table structure for table 'classification'
CREATE TABLE IF NOT EXISTS public.classification (
    classification_id INT GENERATED BY DEFAULT AS IDENTITY,
    classification_name CHARACTER VARYING NOT NULL,
    CONSTRAINT classification_pk PRIMARY KEY (classification_id)
);

-- Table structure for table 'inventory'
CREATE TABLE IF NOT EXISTS public.inventory
(
    inv_id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    inv_make character varying NOT NULL,
    inv_model character varying NOT NULL,
    inv_year character(4) NOT NULL,
    inv_description text NOT NULL,
    inv_image character varying NOT NULL,
    inv_thumbnail character varying NOT NULL,
    inv_price numeric(9,0) NOT NULL,
    inv_miles integer NOT NULL,
    inv_color character varying NOT NULL,
    classification_id integer NOT NULL,
    CONSTRAINT inventory_pkey PRIMARY KEY (inv_id),
    CONSTRAINT fk_classification FOREIGN KEY (classification_id)
        REFERENCES public.classification (classification_id) MATCH SIMPLE
        ON UPDATE CASCADE
        ON DELETE NO ACTION
);

-- Table structure for table `account`
CREATE TABLE IF NOT EXISTS public.account
(
    account_id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    account_firstname character varying NOT NULL,
    account_lastname character varying NOT NULL,
    account_email character varying NOT NULL,
    account_password character varying NOT NULL,
    account_type account_type NOT NULL DEFAULT 'Client'::account_type,
    CONSTRAINT account_pkey PRIMARY KEY (account_id)
);

-- Table structure for table 'message'
CREATE TABLE IF NOT EXISTS public.message
(
    message_id serial PRIMARY KEY,
    message_from character varying NOT NULL,
    message_to character varying NOT NULL,
    message_subject character varying NOT NULL,
    message_body text NOT NULL,
    message_sent_at timestamp without time zone NOT NULL DEFAULT current_timestamp,
    message_read boolean NOT NULL DEFAULT false,
    message_created timestamp without time zone NOT NULL DEFAULT current_timestamp
);

-- Data for table 'classification'
INSERT INTO public.classification (classification_name)
VALUES ('Customer'),
    ('Sport'),
    ('SUV'),
    ('Truck'),
    ('Sedan');

-- Modify the "GM Hummer" record to change "small interiors" to "a huge interior"
UPDATE public.inventory
SET inv_description = REPLACE(inv_description, 'small interiors', 'a huge interior')
WHERE inv_make = 'GM' AND inv_model = 'Hummer';

-- Update all records in the `inventory` table to add "/vehicles" to the file path in `inv_image` and `inv_thumbnail`
UPDATE public.inventory
SET inv_image = REGEXP_REPLACE(inv_image, '(/images/)', '\1vehicles/', 'g'),
    inv_thumbnail = REGEXP_REPLACE(inv_thumbnail, '(/images/)', '\1vehicles/', 'g');
